//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行库版本:2.0.50727.3634
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

// 
// 此源代码是由 Microsoft.VSDesigner 2.0.50727.3634 版自动生成。
// 
#pragma warning disable 1591

namespace Warehousing.WebReference {
    using System.Diagnostics;
    using System.Web.Services;
    using System.ComponentModel;
    using System.Web.Services.Protocols;
    using System;
    using System.Xml.Serialization;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="LocalToWebsiteSoap", Namespace="http://tempuri.org/")]
    public partial class LocalToWebsite : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private MySoapHeader mySoapHeaderValueField;
        
        private System.Threading.SendOrPostCallback StockSynToVPNOperationCompleted;
        
        private System.Threading.SendOrPostCallback BalanceMoneySynToVPNOperationCompleted;
        
        private System.Threading.SendOrPostCallback orderCancelInWebOperationCompleted;
        
        private System.Threading.SendOrPostCallback getNoLocalCancelOrderOperationCompleted;
        
        private System.Threading.SendOrPostCallback SendOrderPrintInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback ChangeStockOperationCompleted;
        
        private System.Threading.SendOrPostCallback SendUserMoneyChangeOperationCompleted;
        
        private System.Threading.SendOrPostCallback ConfirmRukuInWebOperationCompleted;
        
        private System.Threading.SendOrPostCallback ConfirmChukuInWebOperationCompleted;
        
        private System.Threading.SendOrPostCallback SendBeLocalFalgOperationCompleted;
        
        private System.Threading.SendOrPostCallback ConfirmSecKillOperationCompleted;
        
        private System.Threading.SendOrPostCallback getWarehousingPrintInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback getStockActionFromStorageOperationCompleted;
        
        private System.Threading.SendOrPostCallback getUserMoneyActionOperationCompleted;
        
        private System.Threading.SendOrPostCallback getSupplierPayFromStorageOperationCompleted;
        
        private System.Threading.SendOrPostCallback getSupplierTransactionFromStorageOperationCompleted;
        
        private System.Threading.SendOrPostCallback updateSafetyWarehouseGoodsNumLocalOperationCompleted;
        
        private System.Threading.SendOrPostCallback getDirectOrderPostOperationCompleted;
        
        private System.Threading.SendOrPostCallback getDirectOrderPostInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback getDirectStockChangeOperationCompleted;
        
        private System.Threading.SendOrPostCallback getSelfPrintOkOperationCompleted;
        
        private System.Threading.SendOrPostCallback getLocalIpOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public LocalToWebsite() {
            this.Url = global::Warehousing.Properties.Settings.Default.Warehousing_WebReference_LocalToWebsite;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public MySoapHeader MySoapHeaderValue {
            get {
                return this.mySoapHeaderValueField;
            }
            set {
                this.mySoapHeaderValueField = value;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event StockSynToVPNCompletedEventHandler StockSynToVPNCompleted;
        
        /// <remarks/>
        public event BalanceMoneySynToVPNCompletedEventHandler BalanceMoneySynToVPNCompleted;
        
        /// <remarks/>
        public event orderCancelInWebCompletedEventHandler orderCancelInWebCompleted;
        
        /// <remarks/>
        public event getNoLocalCancelOrderCompletedEventHandler getNoLocalCancelOrderCompleted;
        
        /// <remarks/>
        public event SendOrderPrintInfoCompletedEventHandler SendOrderPrintInfoCompleted;
        
        /// <remarks/>
        public event ChangeStockCompletedEventHandler ChangeStockCompleted;
        
        /// <remarks/>
        public event SendUserMoneyChangeCompletedEventHandler SendUserMoneyChangeCompleted;
        
        /// <remarks/>
        public event ConfirmRukuInWebCompletedEventHandler ConfirmRukuInWebCompleted;
        
        /// <remarks/>
        public event ConfirmChukuInWebCompletedEventHandler ConfirmChukuInWebCompleted;
        
        /// <remarks/>
        public event SendBeLocalFalgCompletedEventHandler SendBeLocalFalgCompleted;
        
        /// <remarks/>
        public event ConfirmSecKillCompletedEventHandler ConfirmSecKillCompleted;
        
        /// <remarks/>
        public event getWarehousingPrintInfoCompletedEventHandler getWarehousingPrintInfoCompleted;
        
        /// <remarks/>
        public event getStockActionFromStorageCompletedEventHandler getStockActionFromStorageCompleted;
        
        /// <remarks/>
        public event getUserMoneyActionCompletedEventHandler getUserMoneyActionCompleted;
        
        /// <remarks/>
        public event getSupplierPayFromStorageCompletedEventHandler getSupplierPayFromStorageCompleted;
        
        /// <remarks/>
        public event getSupplierTransactionFromStorageCompletedEventHandler getSupplierTransactionFromStorageCompleted;
        
        /// <remarks/>
        public event updateSafetyWarehouseGoodsNumLocalCompletedEventHandler updateSafetyWarehouseGoodsNumLocalCompleted;
        
        /// <remarks/>
        public event getDirectOrderPostCompletedEventHandler getDirectOrderPostCompleted;
        
        /// <remarks/>
        public event getDirectOrderPostInfoCompletedEventHandler getDirectOrderPostInfoCompleted;
        
        /// <remarks/>
        public event getDirectStockChangeCompletedEventHandler getDirectStockChangeCompleted;
        
        /// <remarks/>
        public event getSelfPrintOkCompletedEventHandler getSelfPrintOkCompleted;
        
        /// <remarks/>
        public event getLocalIpCompletedEventHandler getLocalIpCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MySoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/StockSynToVPN", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void StockSynToVPN(Product[] products) {
            this.Invoke("StockSynToVPN", new object[] {
                        products});
        }
        
        /// <remarks/>
        public void StockSynToVPNAsync(Product[] products) {
            this.StockSynToVPNAsync(products, null);
        }
        
        /// <remarks/>
        public void StockSynToVPNAsync(Product[] products, object userState) {
            if ((this.StockSynToVPNOperationCompleted == null)) {
                this.StockSynToVPNOperationCompleted = new System.Threading.SendOrPostCallback(this.OnStockSynToVPNOperationCompleted);
            }
            this.InvokeAsync("StockSynToVPN", new object[] {
                        products}, this.StockSynToVPNOperationCompleted, userState);
        }
        
        private void OnStockSynToVPNOperationCompleted(object arg) {
            if ((this.StockSynToVPNCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.StockSynToVPNCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MySoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/BalanceMoneySynToVPN", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void BalanceMoneySynToVPN(int supplierID, double zonger) {
            this.Invoke("BalanceMoneySynToVPN", new object[] {
                        supplierID,
                        zonger});
        }
        
        /// <remarks/>
        public void BalanceMoneySynToVPNAsync(int supplierID, double zonger) {
            this.BalanceMoneySynToVPNAsync(supplierID, zonger, null);
        }
        
        /// <remarks/>
        public void BalanceMoneySynToVPNAsync(int supplierID, double zonger, object userState) {
            if ((this.BalanceMoneySynToVPNOperationCompleted == null)) {
                this.BalanceMoneySynToVPNOperationCompleted = new System.Threading.SendOrPostCallback(this.OnBalanceMoneySynToVPNOperationCompleted);
            }
            this.InvokeAsync("BalanceMoneySynToVPN", new object[] {
                        supplierID,
                        zonger}, this.BalanceMoneySynToVPNOperationCompleted, userState);
        }
        
        private void OnBalanceMoneySynToVPNOperationCompleted(object arg) {
            if ((this.BalanceMoneySynToVPNCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.BalanceMoneySynToVPNCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MySoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/orderCancelInWeb", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void orderCancelInWeb(int id, string WhoDo, int BigType) {
            this.Invoke("orderCancelInWeb", new object[] {
                        id,
                        WhoDo,
                        BigType});
        }
        
        /// <remarks/>
        public void orderCancelInWebAsync(int id, string WhoDo, int BigType) {
            this.orderCancelInWebAsync(id, WhoDo, BigType, null);
        }
        
        /// <remarks/>
        public void orderCancelInWebAsync(int id, string WhoDo, int BigType, object userState) {
            if ((this.orderCancelInWebOperationCompleted == null)) {
                this.orderCancelInWebOperationCompleted = new System.Threading.SendOrPostCallback(this.OnorderCancelInWebOperationCompleted);
            }
            this.InvokeAsync("orderCancelInWeb", new object[] {
                        id,
                        WhoDo,
                        BigType}, this.orderCancelInWebOperationCompleted, userState);
        }
        
        private void OnorderCancelInWebOperationCompleted(object arg) {
            if ((this.orderCancelInWebCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.orderCancelInWebCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MySoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getNoLocalCancelOrder", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int getNoLocalCancelOrder(string OrderStr, string CancelIdStr, int BigType) {
            object[] results = this.Invoke("getNoLocalCancelOrder", new object[] {
                        OrderStr,
                        CancelIdStr,
                        BigType});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void getNoLocalCancelOrderAsync(string OrderStr, string CancelIdStr, int BigType) {
            this.getNoLocalCancelOrderAsync(OrderStr, CancelIdStr, BigType, null);
        }
        
        /// <remarks/>
        public void getNoLocalCancelOrderAsync(string OrderStr, string CancelIdStr, int BigType, object userState) {
            if ((this.getNoLocalCancelOrderOperationCompleted == null)) {
                this.getNoLocalCancelOrderOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetNoLocalCancelOrderOperationCompleted);
            }
            this.InvokeAsync("getNoLocalCancelOrder", new object[] {
                        OrderStr,
                        CancelIdStr,
                        BigType}, this.getNoLocalCancelOrderOperationCompleted, userState);
        }
        
        private void OngetNoLocalCancelOrderOperationCompleted(object arg) {
            if ((this.getNoLocalCancelOrderCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getNoLocalCancelOrderCompleted(this, new getNoLocalCancelOrderCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MySoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SendOrderPrintInfo", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void SendOrderPrintInfo(int BigType, string OrderSn, string LiuShuiHao, string DeliverTime, string DeliverOpMan, string DeliverMessage, string DeliverReplay) {
            this.Invoke("SendOrderPrintInfo", new object[] {
                        BigType,
                        OrderSn,
                        LiuShuiHao,
                        DeliverTime,
                        DeliverOpMan,
                        DeliverMessage,
                        DeliverReplay});
        }
        
        /// <remarks/>
        public void SendOrderPrintInfoAsync(int BigType, string OrderSn, string LiuShuiHao, string DeliverTime, string DeliverOpMan, string DeliverMessage, string DeliverReplay) {
            this.SendOrderPrintInfoAsync(BigType, OrderSn, LiuShuiHao, DeliverTime, DeliverOpMan, DeliverMessage, DeliverReplay, null);
        }
        
        /// <remarks/>
        public void SendOrderPrintInfoAsync(int BigType, string OrderSn, string LiuShuiHao, string DeliverTime, string DeliverOpMan, string DeliverMessage, string DeliverReplay, object userState) {
            if ((this.SendOrderPrintInfoOperationCompleted == null)) {
                this.SendOrderPrintInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendOrderPrintInfoOperationCompleted);
            }
            this.InvokeAsync("SendOrderPrintInfo", new object[] {
                        BigType,
                        OrderSn,
                        LiuShuiHao,
                        DeliverTime,
                        DeliverOpMan,
                        DeliverMessage,
                        DeliverReplay}, this.SendOrderPrintInfoOperationCompleted, userState);
        }
        
        private void OnSendOrderPrintInfoOperationCompleted(object arg) {
            if ((this.SendOrderPrintInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendOrderPrintInfoCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MySoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ChangeStock", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void ChangeStock(int WareHouseId, int StyleId, int Num, string OrderSn, int OpType) {
            this.Invoke("ChangeStock", new object[] {
                        WareHouseId,
                        StyleId,
                        Num,
                        OrderSn,
                        OpType});
        }
        
        /// <remarks/>
        public void ChangeStockAsync(int WareHouseId, int StyleId, int Num, string OrderSn, int OpType) {
            this.ChangeStockAsync(WareHouseId, StyleId, Num, OrderSn, OpType, null);
        }
        
        /// <remarks/>
        public void ChangeStockAsync(int WareHouseId, int StyleId, int Num, string OrderSn, int OpType, object userState) {
            if ((this.ChangeStockOperationCompleted == null)) {
                this.ChangeStockOperationCompleted = new System.Threading.SendOrPostCallback(this.OnChangeStockOperationCompleted);
            }
            this.InvokeAsync("ChangeStock", new object[] {
                        WareHouseId,
                        StyleId,
                        Num,
                        OrderSn,
                        OpType}, this.ChangeStockOperationCompleted, userState);
        }
        
        private void OnChangeStockOperationCompleted(object arg) {
            if ((this.ChangeStockCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ChangeStockCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MySoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SendUserMoneyChange", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void SendUserMoneyChange(string UserId, double MoneyAmount) {
            this.Invoke("SendUserMoneyChange", new object[] {
                        UserId,
                        MoneyAmount});
        }
        
        /// <remarks/>
        public void SendUserMoneyChangeAsync(string UserId, double MoneyAmount) {
            this.SendUserMoneyChangeAsync(UserId, MoneyAmount, null);
        }
        
        /// <remarks/>
        public void SendUserMoneyChangeAsync(string UserId, double MoneyAmount, object userState) {
            if ((this.SendUserMoneyChangeOperationCompleted == null)) {
                this.SendUserMoneyChangeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendUserMoneyChangeOperationCompleted);
            }
            this.InvokeAsync("SendUserMoneyChange", new object[] {
                        UserId,
                        MoneyAmount}, this.SendUserMoneyChangeOperationCompleted, userState);
        }
        
        private void OnSendUserMoneyChangeOperationCompleted(object arg) {
            if ((this.SendUserMoneyChangeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendUserMoneyChangeCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MySoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ConfirmRukuInWeb", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void ConfirmRukuInWeb(string LiuShuiHao) {
            this.Invoke("ConfirmRukuInWeb", new object[] {
                        LiuShuiHao});
        }
        
        /// <remarks/>
        public void ConfirmRukuInWebAsync(string LiuShuiHao) {
            this.ConfirmRukuInWebAsync(LiuShuiHao, null);
        }
        
        /// <remarks/>
        public void ConfirmRukuInWebAsync(string LiuShuiHao, object userState) {
            if ((this.ConfirmRukuInWebOperationCompleted == null)) {
                this.ConfirmRukuInWebOperationCompleted = new System.Threading.SendOrPostCallback(this.OnConfirmRukuInWebOperationCompleted);
            }
            this.InvokeAsync("ConfirmRukuInWeb", new object[] {
                        LiuShuiHao}, this.ConfirmRukuInWebOperationCompleted, userState);
        }
        
        private void OnConfirmRukuInWebOperationCompleted(object arg) {
            if ((this.ConfirmRukuInWebCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ConfirmRukuInWebCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MySoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ConfirmChukuInWeb", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void ConfirmChukuInWeb(string LiuShuiHao) {
            this.Invoke("ConfirmChukuInWeb", new object[] {
                        LiuShuiHao});
        }
        
        /// <remarks/>
        public void ConfirmChukuInWebAsync(string LiuShuiHao) {
            this.ConfirmChukuInWebAsync(LiuShuiHao, null);
        }
        
        /// <remarks/>
        public void ConfirmChukuInWebAsync(string LiuShuiHao, object userState) {
            if ((this.ConfirmChukuInWebOperationCompleted == null)) {
                this.ConfirmChukuInWebOperationCompleted = new System.Threading.SendOrPostCallback(this.OnConfirmChukuInWebOperationCompleted);
            }
            this.InvokeAsync("ConfirmChukuInWeb", new object[] {
                        LiuShuiHao}, this.ConfirmChukuInWebOperationCompleted, userState);
        }
        
        private void OnConfirmChukuInWebOperationCompleted(object arg) {
            if ((this.ConfirmChukuInWebCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ConfirmChukuInWebCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MySoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SendBeLocalFalg", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void SendBeLocalFalg(string Dotable, string IdName, int ActiveId) {
            this.Invoke("SendBeLocalFalg", new object[] {
                        Dotable,
                        IdName,
                        ActiveId});
        }
        
        /// <remarks/>
        public void SendBeLocalFalgAsync(string Dotable, string IdName, int ActiveId) {
            this.SendBeLocalFalgAsync(Dotable, IdName, ActiveId, null);
        }
        
        /// <remarks/>
        public void SendBeLocalFalgAsync(string Dotable, string IdName, int ActiveId, object userState) {
            if ((this.SendBeLocalFalgOperationCompleted == null)) {
                this.SendBeLocalFalgOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendBeLocalFalgOperationCompleted);
            }
            this.InvokeAsync("SendBeLocalFalg", new object[] {
                        Dotable,
                        IdName,
                        ActiveId}, this.SendBeLocalFalgOperationCompleted, userState);
        }
        
        private void OnSendBeLocalFalgOperationCompleted(object arg) {
            if ((this.SendBeLocalFalgCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendBeLocalFalgCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MySoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ConfirmSecKill", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void ConfirmSecKill(string OrderId) {
            this.Invoke("ConfirmSecKill", new object[] {
                        OrderId});
        }
        
        /// <remarks/>
        public void ConfirmSecKillAsync(string OrderId) {
            this.ConfirmSecKillAsync(OrderId, null);
        }
        
        /// <remarks/>
        public void ConfirmSecKillAsync(string OrderId, object userState) {
            if ((this.ConfirmSecKillOperationCompleted == null)) {
                this.ConfirmSecKillOperationCompleted = new System.Threading.SendOrPostCallback(this.OnConfirmSecKillOperationCompleted);
            }
            this.InvokeAsync("ConfirmSecKill", new object[] {
                        OrderId}, this.ConfirmSecKillOperationCompleted, userState);
        }
        
        private void OnConfirmSecKillOperationCompleted(object arg) {
            if ((this.ConfirmSecKillCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ConfirmSecKillCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MySoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getWarehousingPrintInfo", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void getWarehousingPrintInfo(string LiuShuiHao, string PrintDate) {
            this.Invoke("getWarehousingPrintInfo", new object[] {
                        LiuShuiHao,
                        PrintDate});
        }
        
        /// <remarks/>
        public void getWarehousingPrintInfoAsync(string LiuShuiHao, string PrintDate) {
            this.getWarehousingPrintInfoAsync(LiuShuiHao, PrintDate, null);
        }
        
        /// <remarks/>
        public void getWarehousingPrintInfoAsync(string LiuShuiHao, string PrintDate, object userState) {
            if ((this.getWarehousingPrintInfoOperationCompleted == null)) {
                this.getWarehousingPrintInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetWarehousingPrintInfoOperationCompleted);
            }
            this.InvokeAsync("getWarehousingPrintInfo", new object[] {
                        LiuShuiHao,
                        PrintDate}, this.getWarehousingPrintInfoOperationCompleted, userState);
        }
        
        private void OngetWarehousingPrintInfoOperationCompleted(object arg) {
            if ((this.getWarehousingPrintInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getWarehousingPrintInfoCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MySoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getStockActionFromStorage", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void getStockActionFromStorage(int id, int StyleId, double EffectNum, int DoType, string DingDan) {
            this.Invoke("getStockActionFromStorage", new object[] {
                        id,
                        StyleId,
                        EffectNum,
                        DoType,
                        DingDan});
        }
        
        /// <remarks/>
        public void getStockActionFromStorageAsync(int id, int StyleId, double EffectNum, int DoType, string DingDan) {
            this.getStockActionFromStorageAsync(id, StyleId, EffectNum, DoType, DingDan, null);
        }
        
        /// <remarks/>
        public void getStockActionFromStorageAsync(int id, int StyleId, double EffectNum, int DoType, string DingDan, object userState) {
            if ((this.getStockActionFromStorageOperationCompleted == null)) {
                this.getStockActionFromStorageOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetStockActionFromStorageOperationCompleted);
            }
            this.InvokeAsync("getStockActionFromStorage", new object[] {
                        id,
                        StyleId,
                        EffectNum,
                        DoType,
                        DingDan}, this.getStockActionFromStorageOperationCompleted, userState);
        }
        
        private void OngetStockActionFromStorageOperationCompleted(object arg) {
            if ((this.getStockActionFromStorageCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getStockActionFromStorageCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MySoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getUserMoneyAction", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void getUserMoneyAction(int id, int UserId, double MoneyAmount, string DingDan) {
            this.Invoke("getUserMoneyAction", new object[] {
                        id,
                        UserId,
                        MoneyAmount,
                        DingDan});
        }
        
        /// <remarks/>
        public void getUserMoneyActionAsync(int id, int UserId, double MoneyAmount, string DingDan) {
            this.getUserMoneyActionAsync(id, UserId, MoneyAmount, DingDan, null);
        }
        
        /// <remarks/>
        public void getUserMoneyActionAsync(int id, int UserId, double MoneyAmount, string DingDan, object userState) {
            if ((this.getUserMoneyActionOperationCompleted == null)) {
                this.getUserMoneyActionOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetUserMoneyActionOperationCompleted);
            }
            this.InvokeAsync("getUserMoneyAction", new object[] {
                        id,
                        UserId,
                        MoneyAmount,
                        DingDan}, this.getUserMoneyActionOperationCompleted, userState);
        }
        
        private void OngetUserMoneyActionOperationCompleted(object arg) {
            if ((this.getUserMoneyActionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getUserMoneyActionCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MySoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getSupplierPayFromStorage", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void getSupplierPayFromStorage(int id, int SupplierId, double PayMoney, string PayType, string ForWhy, string LiuShuihao) {
            this.Invoke("getSupplierPayFromStorage", new object[] {
                        id,
                        SupplierId,
                        PayMoney,
                        PayType,
                        ForWhy,
                        LiuShuihao});
        }
        
        /// <remarks/>
        public void getSupplierPayFromStorageAsync(int id, int SupplierId, double PayMoney, string PayType, string ForWhy, string LiuShuihao) {
            this.getSupplierPayFromStorageAsync(id, SupplierId, PayMoney, PayType, ForWhy, LiuShuihao, null);
        }
        
        /// <remarks/>
        public void getSupplierPayFromStorageAsync(int id, int SupplierId, double PayMoney, string PayType, string ForWhy, string LiuShuihao, object userState) {
            if ((this.getSupplierPayFromStorageOperationCompleted == null)) {
                this.getSupplierPayFromStorageOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetSupplierPayFromStorageOperationCompleted);
            }
            this.InvokeAsync("getSupplierPayFromStorage", new object[] {
                        id,
                        SupplierId,
                        PayMoney,
                        PayType,
                        ForWhy,
                        LiuShuihao}, this.getSupplierPayFromStorageOperationCompleted, userState);
        }
        
        private void OngetSupplierPayFromStorageOperationCompleted(object arg) {
            if ((this.getSupplierPayFromStorageCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getSupplierPayFromStorageCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MySoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getSupplierTransactionFromStorage", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void getSupplierTransactionFromStorage(int SupplierType, int SupplierId, int TransactionType, double TransactionMoney, System.DateTime TransactionTime, string RelatedSn) {
            this.Invoke("getSupplierTransactionFromStorage", new object[] {
                        SupplierType,
                        SupplierId,
                        TransactionType,
                        TransactionMoney,
                        TransactionTime,
                        RelatedSn});
        }
        
        /// <remarks/>
        public void getSupplierTransactionFromStorageAsync(int SupplierType, int SupplierId, int TransactionType, double TransactionMoney, System.DateTime TransactionTime, string RelatedSn) {
            this.getSupplierTransactionFromStorageAsync(SupplierType, SupplierId, TransactionType, TransactionMoney, TransactionTime, RelatedSn, null);
        }
        
        /// <remarks/>
        public void getSupplierTransactionFromStorageAsync(int SupplierType, int SupplierId, int TransactionType, double TransactionMoney, System.DateTime TransactionTime, string RelatedSn, object userState) {
            if ((this.getSupplierTransactionFromStorageOperationCompleted == null)) {
                this.getSupplierTransactionFromStorageOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetSupplierTransactionFromStorageOperationCompleted);
            }
            this.InvokeAsync("getSupplierTransactionFromStorage", new object[] {
                        SupplierType,
                        SupplierId,
                        TransactionType,
                        TransactionMoney,
                        TransactionTime,
                        RelatedSn}, this.getSupplierTransactionFromStorageOperationCompleted, userState);
        }
        
        private void OngetSupplierTransactionFromStorageOperationCompleted(object arg) {
            if ((this.getSupplierTransactionFromStorageCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getSupplierTransactionFromStorageCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MySoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/updateSafetyWarehouseGoodsNumLocal", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void updateSafetyWarehouseGoodsNumLocal() {
            this.Invoke("updateSafetyWarehouseGoodsNumLocal", new object[0]);
        }
        
        /// <remarks/>
        public void updateSafetyWarehouseGoodsNumLocalAsync() {
            this.updateSafetyWarehouseGoodsNumLocalAsync(null);
        }
        
        /// <remarks/>
        public void updateSafetyWarehouseGoodsNumLocalAsync(object userState) {
            if ((this.updateSafetyWarehouseGoodsNumLocalOperationCompleted == null)) {
                this.updateSafetyWarehouseGoodsNumLocalOperationCompleted = new System.Threading.SendOrPostCallback(this.OnupdateSafetyWarehouseGoodsNumLocalOperationCompleted);
            }
            this.InvokeAsync("updateSafetyWarehouseGoodsNumLocal", new object[0], this.updateSafetyWarehouseGoodsNumLocalOperationCompleted, userState);
        }
        
        private void OnupdateSafetyWarehouseGoodsNumLocalOperationCompleted(object arg) {
            if ((this.updateSafetyWarehouseGoodsNumLocalCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.updateSafetyWarehouseGoodsNumLocalCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MySoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getDirectOrderPost", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void getDirectOrderPost(int shopxpacid, string userid, string OrderSn, System.DateTime deliverTime) {
            this.Invoke("getDirectOrderPost", new object[] {
                        shopxpacid,
                        userid,
                        OrderSn,
                        deliverTime});
        }
        
        /// <remarks/>
        public void getDirectOrderPostAsync(int shopxpacid, string userid, string OrderSn, System.DateTime deliverTime) {
            this.getDirectOrderPostAsync(shopxpacid, userid, OrderSn, deliverTime, null);
        }
        
        /// <remarks/>
        public void getDirectOrderPostAsync(int shopxpacid, string userid, string OrderSn, System.DateTime deliverTime, object userState) {
            if ((this.getDirectOrderPostOperationCompleted == null)) {
                this.getDirectOrderPostOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetDirectOrderPostOperationCompleted);
            }
            this.InvokeAsync("getDirectOrderPost", new object[] {
                        shopxpacid,
                        userid,
                        OrderSn,
                        deliverTime}, this.getDirectOrderPostOperationCompleted, userState);
        }
        
        private void OngetDirectOrderPostOperationCompleted(object arg) {
            if ((this.getDirectOrderPostCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getDirectOrderPostCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MySoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getDirectOrderPostInfo", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void getDirectOrderPostInfo(string OrderSn, string ExpressNo, string ExpressCompany, string ExpressTel) {
            this.Invoke("getDirectOrderPostInfo", new object[] {
                        OrderSn,
                        ExpressNo,
                        ExpressCompany,
                        ExpressTel});
        }
        
        /// <remarks/>
        public void getDirectOrderPostInfoAsync(string OrderSn, string ExpressNo, string ExpressCompany, string ExpressTel) {
            this.getDirectOrderPostInfoAsync(OrderSn, ExpressNo, ExpressCompany, ExpressTel, null);
        }
        
        /// <remarks/>
        public void getDirectOrderPostInfoAsync(string OrderSn, string ExpressNo, string ExpressCompany, string ExpressTel, object userState) {
            if ((this.getDirectOrderPostInfoOperationCompleted == null)) {
                this.getDirectOrderPostInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetDirectOrderPostInfoOperationCompleted);
            }
            this.InvokeAsync("getDirectOrderPostInfo", new object[] {
                        OrderSn,
                        ExpressNo,
                        ExpressCompany,
                        ExpressTel}, this.getDirectOrderPostInfoOperationCompleted, userState);
        }
        
        private void OngetDirectOrderPostInfoOperationCompleted(object arg) {
            if ((this.getDirectOrderPostInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getDirectOrderPostInfoCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MySoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getDirectStockChange", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int getDirectStockChange(int supplierid, string productid, string styleid, bool isincome, int num, string remark) {
            object[] results = this.Invoke("getDirectStockChange", new object[] {
                        supplierid,
                        productid,
                        styleid,
                        isincome,
                        num,
                        remark});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void getDirectStockChangeAsync(int supplierid, string productid, string styleid, bool isincome, int num, string remark) {
            this.getDirectStockChangeAsync(supplierid, productid, styleid, isincome, num, remark, null);
        }
        
        /// <remarks/>
        public void getDirectStockChangeAsync(int supplierid, string productid, string styleid, bool isincome, int num, string remark, object userState) {
            if ((this.getDirectStockChangeOperationCompleted == null)) {
                this.getDirectStockChangeOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetDirectStockChangeOperationCompleted);
            }
            this.InvokeAsync("getDirectStockChange", new object[] {
                        supplierid,
                        productid,
                        styleid,
                        isincome,
                        num,
                        remark}, this.getDirectStockChangeOperationCompleted, userState);
        }
        
        private void OngetDirectStockChangeOperationCompleted(object arg) {
            if ((this.getDirectStockChangeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getDirectStockChangeCompleted(this, new getDirectStockChangeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MySoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getSelfPrintOk", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void getSelfPrintOk(string strOrderSn, string DeliverOpMan, int OpTyle) {
            this.Invoke("getSelfPrintOk", new object[] {
                        strOrderSn,
                        DeliverOpMan,
                        OpTyle});
        }
        
        /// <remarks/>
        public void getSelfPrintOkAsync(string strOrderSn, string DeliverOpMan, int OpTyle) {
            this.getSelfPrintOkAsync(strOrderSn, DeliverOpMan, OpTyle, null);
        }
        
        /// <remarks/>
        public void getSelfPrintOkAsync(string strOrderSn, string DeliverOpMan, int OpTyle, object userState) {
            if ((this.getSelfPrintOkOperationCompleted == null)) {
                this.getSelfPrintOkOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetSelfPrintOkOperationCompleted);
            }
            this.InvokeAsync("getSelfPrintOk", new object[] {
                        strOrderSn,
                        DeliverOpMan,
                        OpTyle}, this.getSelfPrintOkOperationCompleted, userState);
        }
        
        private void OngetSelfPrintOkOperationCompleted(object arg) {
            if ((this.getSelfPrintOkCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getSelfPrintOkCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MySoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getLocalIp", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void getLocalIp() {
            this.Invoke("getLocalIp", new object[0]);
        }
        
        /// <remarks/>
        public void getLocalIpAsync() {
            this.getLocalIpAsync(null);
        }
        
        /// <remarks/>
        public void getLocalIpAsync(object userState) {
            if ((this.getLocalIpOperationCompleted == null)) {
                this.getLocalIpOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetLocalIpOperationCompleted);
            }
            this.InvokeAsync("getLocalIp", new object[0], this.getLocalIpOperationCompleted, userState);
        }
        
        private void OngetLocalIpOperationCompleted(object arg) {
            if ((this.getLocalIpCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getLocalIpCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3082")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="http://tempuri.org/", IsNullable=false)]
    public partial class MySoapHeader : System.Web.Services.Protocols.SoapHeader {
        
        private string userField;
        
        private string hashField;
        
        private long timeField;
        
        private System.Xml.XmlAttribute[] anyAttrField;
        
        /// <remarks/>
        public string User {
            get {
                return this.userField;
            }
            set {
                this.userField = value;
            }
        }
        
        /// <remarks/>
        public string Hash {
            get {
                return this.hashField;
            }
            set {
                this.hashField = value;
            }
        }
        
        /// <remarks/>
        public long Time {
            get {
                return this.timeField;
            }
            set {
                this.timeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Xml.XmlAttribute[] AnyAttr {
            get {
                return this.anyAttrField;
            }
            set {
                this.anyAttrField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3082")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class Product {
        
        private int stockTypeField;
        
        private int styleIdField;
        
        private double productNumberField;
        
        private int warehouseIDField;
        
        private string orderIDField;
        
        /// <remarks/>
        public int StockType {
            get {
                return this.stockTypeField;
            }
            set {
                this.stockTypeField = value;
            }
        }
        
        /// <remarks/>
        public int StyleId {
            get {
                return this.styleIdField;
            }
            set {
                this.styleIdField = value;
            }
        }
        
        /// <remarks/>
        public double ProductNumber {
            get {
                return this.productNumberField;
            }
            set {
                this.productNumberField = value;
            }
        }
        
        /// <remarks/>
        public int WarehouseID {
            get {
                return this.warehouseIDField;
            }
            set {
                this.warehouseIDField = value;
            }
        }
        
        /// <remarks/>
        public string OrderID {
            get {
                return this.orderIDField;
            }
            set {
                this.orderIDField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void StockSynToVPNCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void BalanceMoneySynToVPNCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void orderCancelInWebCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void getNoLocalCancelOrderCompletedEventHandler(object sender, getNoLocalCancelOrderCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getNoLocalCancelOrderCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getNoLocalCancelOrderCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void SendOrderPrintInfoCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void ChangeStockCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void SendUserMoneyChangeCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void ConfirmRukuInWebCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void ConfirmChukuInWebCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void SendBeLocalFalgCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void ConfirmSecKillCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void getWarehousingPrintInfoCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void getStockActionFromStorageCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void getUserMoneyActionCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void getSupplierPayFromStorageCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void getSupplierTransactionFromStorageCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void updateSafetyWarehouseGoodsNumLocalCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void getDirectOrderPostCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void getDirectOrderPostInfoCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void getDirectStockChangeCompletedEventHandler(object sender, getDirectStockChangeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getDirectStockChangeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getDirectStockChangeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void getSelfPrintOkCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void getLocalIpCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
}

#pragma warning restore 1591